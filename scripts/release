#!/usr/bin/env bash

# load .env file
if [[ -f .env ]]; then
    source .env
fi

# set variables MAILING_VERSION and MAILING_CORE_VERSION to the value of the "version" attribute from each package.json
MAILING_VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' packages/cli/package.json)
MAILING_CORE_VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' packages/core/package.json)

# throw an error if $MAILING_VERSION is empty
if [[ -z "$MAILING_VERSION" ]]; then
    echo "Failed to set MAILING_VERSION" 1>&2
    exit 1
fi

# throw an error if $MAILING_CORE_VERSION is empty
if [[ -z "$MAILING_CORE_VERSION" ]]; then
    echo "Must provide MAILING_CORE_VERSION in environment" 1>&2
    exit 1
fi

# Make sure you're publishing to the correct npm scope
if ! npm whoami &> /dev/null; then
    echo "You need to be logged in to npm. Run 'npm login' first."
    exit 1
fi

# It's okay to proceed without verifying scope access
# The user can create the scope when publishing if needed
echo "Publishing to @catloafsoft scope - make sure you have access rights"
echo "If you haven't created this scope yet, you'll be prompted during publishing"

# Build packages
pnpm run build

# Publish with public access since scoped packages are private by default
pnpm exec changeset publish --access public
